<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <!--<item name="preferenceTheme">@style/PreferenceThemeOverlay</item>-->
        <item name="preferenceTheme">@style/PreferenceThemeOverlay.v14.Material</item>
        <item name="alertDialogTheme">@style/AppAlertDialog</item>
    </style>
    
    <style name="AppAlertDialog" parent="Theme.AppCompat.DayNight.Dialog.Alert">
        <!--dialog主题使用 DayNight.Dialog.Alert theme提供给的默认浅绿色覆盖了Acivity主题中设置的colorAccent,
        这里覆写是为了再用想要的颜色-->
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="AppAlertDialogContent"
           parent="Theme.AppCompat.DayNight">
        <!-- To keep the color of EditText -->
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <!--Style for a Preference Entry 将把Settings界面上的preference的布局变成material design的-->
    <style name="AppPreference">
        <item name="android:layout">@layout/preference_material</item>
    </style>

    <!--Style for a DialogPreference Entry 定义对话框上的按钮的文字-->
    <style name="AppPreference.DialogPreference">
        <item name="positiveButtonText">@android:string/ok</item>
        <item name="negativeButtonText">@android:string/cancel</item>
    </style>
</resources>
